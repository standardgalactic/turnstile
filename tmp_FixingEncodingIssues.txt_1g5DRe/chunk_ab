without decoding character sets properly
), use
.get_payload(decode=True)
and decode manually using the charset.
✅ Fixed version of the key parts:
Modify
extract_text_from_mhtml()
function like so:
python
Copiar código
def
extract_text_from_mhtml
(
file_path
):
"""
    Extract plain text from an MHTML file by parsing its MIME structure.
    It processes both HTML parts (removing tags) and plain text parts.
    """
with
open
(file_path,
'rb'
)
as
f:
        msg = BytesParser(policy=policy.default).parse(f)
    
    text_parts = []
def
decode_part
(
part
):
        charset = part.get_content_charset()
or
'utf-8'
try
:
return
part.get_payload(decode=
True
).decode(charset, errors=
'replace'
)
except
Exception
as
e:
print
(
f"Failed to decode part:
{e}
")
return
''
if
msg.is_multipart():
for
part
in
msg.walk():
            content_type = part.get_content_type()
if
content_type ==
'text/html'
:
                html_content = decode_part(part)
                soup = BeautifulSoup(html_content,
'html.parser'
)
                text_parts.append(soup.get_text(separator=
"\n"
, strip=
True
))
elif
content_type ==
'text/plain'
:
                text_parts.append(decode_part(part))
else
:
        content_type = msg.get_content_type()
if
content_type ==
'text/html'
:
            html_content = decode_part(msg)
            soup = BeautifulSoup(html_content,
'html.parser'
)
            text_parts.append(soup.get_text(separator=
"\n"
, strip=
True
))
else
:
            text_parts.append(decode_part(msg))
