return
"\n\n"
.join(text_parts)
üß™ Bonus tip: Check if the .mhtml file is really UTF-8
Some MHTML files might actually use Windows-1252 or ISO-8859-1 encoding. If your files still look funky after this fix, try logging
part.get_content_charset()
for debugging.
Let me know if you want to auto-detect encoding or clean up common smart quote issues (like
‚Äú
to
"
,
‚Äô
to
'
) after decoding too.
Dijiste:
can I just apply to one file?
ChatGPT dijo:
Absolutely ‚Äî you can easily modify the script to process
just one MHTML file
instead of all in the current directory. Here‚Äôs how to do it:
üîß Option 1:
Quick change in the
main()
function
Replace this block in
main()
:
python
Copiar c√≥digo
# Find all .mhtml files in the current directory
mhtml_files = glob.glob(
"*.mhtml"
)
if
not
mhtml_files:
print
(
"No MHTML files found in the current directory."
)
return
for
file_path
in
mhtml_files:
print
(
f'Processing
{file_path}
...')
    extracted_text = extract_text_from_mhtml(file_path)
    output_file = os.path.splitext(file_path)[
0
] +
".txt"
with
open
(output_file,
"w"
, encoding=
"utf-8"
)
as
out:
        out.write(extracted_text)
print
(
f"Extracted text written to
{output_file}
")
With this:
python
Copiar c√≥digo
# Process a single MHTML file
file_path =
"example.mhtml"
# ‚Üê Replace this with your filename
if
not
os.path.isfile(file_path):
print
(
f"File '
{file_path}
' not found.")
return
print
(
f'Processing
{file_path}
...')
extracted_text = extract_text_from_mhtml(file_path)
output_file = os.path.splitext(file_path)[
0
] +
".txt"
with
open
