False
)
# ---------- Create a simple Bird object ----------
# Using a cone as a placeholder for a bird.
bpy.ops.mesh.primitive_cone_add(radius1=
0.2
, depth=
0.5
, location=(
0
,
0
,
0
))
bird = bpy.context.active_object
bird.name =
"Bird"
# Rotate so the tip points along the -Y axis (typical boid forward direction)
bird.rotation_euler[
0
] = math.radians(
90
)
# Add a simple material for visibility.
mat = bpy.data.materials.new(name=
"BirdMat"
)
mat.diffuse_color = (
1
,
0.5
,
0.1
,
1
)
bird.data.materials.append(mat)
# ---------- Create a Cube Emitter for 3D Volume ----------
# A larger cube means the boids will be spawned throughout a sizable volume.
bpy.ops.mesh.primitive_cube_add(size=
40
, location=(
0
,
0
,
20
))
emitter = bpy.context.active_object
emitter.name =
"Emitter"
# ---------- Add Particle System for Boid Simulation ----------
ps_mod = emitter.modifiers.new(
"BoidSystem"
,
type
=
'PARTICLE_SYSTEM'
)
psys = emitter.particle_systems[-
1
]
psettings = bpy.data.particles.new(name=
"BoidParticles"
)
psys.settings = psettings
# Set up the emitter properties.
psettings.
type
=
'EMITTER'
psettings.frame_start =
1
psettings.frame_end =
1
# Emit all particles at once
psettings.lifetime =
250
psettings.count =
200
# Increase number for more birds
psettings.emit_from =
'VOLUME'
# Emit from the volume of the cube
# Use object instancing to render each particle as our bird.
psettings.render_type =
'OBJECT'
psettings.instance_object = bird
# ---------- Set Up Boid Physics ----------
psettings.physics_type =
'BOIDS'
boid = psettings.boid_settings
boid.use_flight =
True
# Allow free 3D movement
boid.max_speed =
3.0
# Increased speed for a larger space
boid.max_acceleration =
