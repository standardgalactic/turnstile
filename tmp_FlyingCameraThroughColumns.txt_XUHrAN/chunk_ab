5
y =
0
z = random.uniform(
5
,
15
)
    point.co = (x, y, z,
1
)
# Increase the resolution for a smoother path
curve_data.resolution_u =
12
# Create an object from the curve data and link it to the scene
curve_object = bpy.data.objects.new(
"CameraPath"
, curve_data)
bpy.context.collection.objects.link(curve_object)
# ---------- Add a camera and set up animation along the path ----------
# Add a camera to the scene
bpy.ops.
object
.camera_add(location=(
0
,
0
,
10
))
camera = bpy.context.active_object
# Add a Follow Path constraint to the camera targeting the curve
follow_path = camera.constraints.new(
type
=
'FOLLOW_PATH'
)
follow_path.target = curve_object
follow_path.use_fixed_location =
True
# Use a fixed location along the path
follow_path.forward_axis =
'FORWARD_X'
follow_path.up_axis =
'UP_Z'
# Set up the timeline for the animation
bpy.context.scene.frame_start =
1
bpy.context.scene.frame_end =
250
# Animate the camera along the path by keyframing the offset factor
follow_path.offset_factor =
0.0
camera.constraints[
"Follow Path"
].keyframe_insert(data_path=
"offset_factor"
, frame=
1
)
follow_path.offset_factor =
1.0
camera.constraints[
"Follow Path"
].keyframe_insert(data_path=
"offset_factor"
, frame=
250
)
# Optionally, set the camera as the active scene camera
bpy.context.scene.camera = camera
How It Works
Clearing the Scene:
The script first removes all objects.
Creating Columns:
It then creates 50 (modifiable) cylinders with random positions, widths (radius), and heights. The cylinders’ origins are adjusted so they sit on the ground.
Camera Path:
A NURBS curve is created with a series of control points forming a smooth 3D path. You can adjust the number of points or their placement for a different flight path.
Camera Setup & Animation:
A camera is added, and a “Follow Path” constraint makes it follow the curve. Keyframes are inserted at frame 1 and frame 250 so that when you play the animation, the camera moves from the beginning to the end of the path.
You can run this script in Blender’s Scripting tab, then hit
Play
(or press
Alt+A
) in the timeline to see the camera fly through your randomly generated column "forest" or "Death Star" corridor. Enjoy experimenting with the parameters to get the scene that best fits your vision!
Dijiste:
The camera is facing straigh down and doesn't move through the scene like through the x axis
ChatGPT dijo:
Reasoned about camera movement and orientation for 16 seconds
You can fix this by making the camera actually “follow” the curve’s direction. In the follow path constraint, enable the curve follow option and adjust the forward/up axis so that the camera points along the curve rather than straight down. For example, try updating the constraint section like this:
python
Copiar código
# Add a Follow Path constraint to the camera targeting the curve
follow_path = camera.constraints.new(
type
=
'FOLLOW_PATH'
)
follow_path.target = curve_object
follow_path.use_fixed_location =
